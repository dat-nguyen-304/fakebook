// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.0
//   protoc               v3.20.3
// source: proto/user.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "user";

export enum Gender {
  MALE = 0,
  FEMALE = 1,
  UNRECOGNIZED = -1,
}

export interface User {
  id: string;
  username: string;
  password: string;
  fullName: string;
  isOnline: boolean;
  biography: string;
  gender: Gender;
  avatar: string;
  cover: string;
  work: string;
  school: string;
  hometown: string;
  living: string;
  followers: number;
  lastOnline: number;
  createdDate: number;
  updatedDate: number;
}

export interface Empty {
}

export interface UserResponse {
  success: boolean;
  message: string;
  data: User | undefined;
}

export interface UpdateUserImageRequest {
  userId: string;
  updateUserImageDto: UpdateUserImageDto | undefined;
}

export interface UpdateUserImageDto {
  url: string;
  type: string;
}

export const USER_PACKAGE_NAME = "user";

export interface UserServiceClient {
  updateUserImage(request: UpdateUserImageRequest): Observable<UserResponse>;
}

export interface UserServiceController {
  updateUserImage(request: UpdateUserImageRequest): Promise<UserResponse> | Observable<UserResponse> | UserResponse;
}

export function UserServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["updateUserImage"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("UserService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("UserService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const USER_SERVICE_NAME = "UserService";
